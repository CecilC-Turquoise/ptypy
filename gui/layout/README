#############################################
# PTYPY EDITOR GUI README 
##########################

This file sums up the files that are required to run the GUI properly.

- Ui_MainWindow.py (READ-ONLY)
  Layout file for the GUI main window. 
  Converted from .ui file using pyuic4.
  The window basically consists of a treeView with several pushButtons on the left and a simple label on the right.
  Take into account that the treeView is replaced by the custom-defined PtypyTreeView.

- Ui_EditWindow.py (READ-ONLY)
  Layout file for the GUI edit window.
  Converted from .ui file using pyuic4.
  The window is a dialog, consisting of a PtypyTreeView and two pushButtons.

- ptypy_template.csv (READ-ONLY)
  CSV file that contains name, type, lowerlimit, upperlimit, shortDoc and longDoc of every Ptycho parameter. 
  STILL INCOMPLETE! rethink general structure, too.
  Converted from ptycho.ods using the 'Save As...' option.
  IMPORTANT: The field delimiter needs to be the pipe |
             A header row with keys is required (for later read in to PtypyDictionaries)

- ptypy_template.xml (READ_ONLY)
  XML file that serves as template for the MainWindow's treeView when the GUI is started.
  IMPORTANT: The root element has to be defined as <root>.
             Any child element has to be defined as <child>. 
	     Each element needs to be given a 'name' attribute at least.
	     Childless children additionally require a 'value' item (except for 'scans' and 'engines').
	     Default values are hard-coded.

- engines_template.xml (READ-ONLY)
  XML file that serves as template for the engine EditWindow's treeView. 
  The parameters of different engines are defined here.
  STILL INCOMPLETE!
  IMPORTANT: Same as for ptypy_template.xml

- ptypySubclasses.py
  Python file that contains custom-defined classes used for the GUI, mostly reimplemented from PyQt classes.
  Detailed descriptions on attributes and methods can be found in the file itself. 
  Content: class EditWindow()
           class Item()
	   class PtypyDictionaries()
	   class PtypyModel()
	   class PtypyTreeView()
	   list  ENGINE_LIST
  An instance of PtypyDictionaries() called PtypyDict is also defined here. It needs to be globally accessible since it serves as lookup.

- ptypy_main_04.py
  Python file that contains the main routine and MainWindow() class.
  All widget connections, file saving/editing/loading/closing and 'scan'/'engine' adding/editing/removing is handled here. 
  When the current configuration is saved, a python output file is created as well.
  Three paths are given as global variables, CHANGE if they're not in the same directory as ptypy_main_04.py


# # # # # # #
#   TO DO   #
# # # # # # # 
- Decide a proper structure for ptycho.ods. It is important that the hierarchy of the later tree can be read.
  From this spreadsheet, an xml template for the MainWindow treeView with parameter defaults is created, and the PtypyDictionaries are filled with type, lower/upperlimit and short/longDocs.
- This requires a new read-in procedure. Parent items should contain an PtypyDictionary about their children as attribute (to avoid name collisions).
- Fully implement the xml-to-python converter. Before this can be done, all underlying data structures have to be set. 
- Implement an additional 'Export as py...' function (besides the 'Save as...' that writes an xml file of the MainWindow treeView). 
